name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: CI
    strategy:
      matrix:
        browser: ["chrome", "firefox"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup playwright cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Setup pnpm cache 
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm dlx create-playwright --with-deps
          pnpm install

      - name: Type check
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint
    
      - name: Build project
        run: pnpm build:${{ matrix.browser }}

      - name: Test project
        if: matrix.browser == "chrome"
        env:
          STUDENT_ID: ${{ secrets.STUDENT_ID }}
          PASSWORD: ${{ secrets.Password }}
        run: HEADFUL=true xvfb-run --auto-servernum npx server-test 'http-server --cors' 8080 test